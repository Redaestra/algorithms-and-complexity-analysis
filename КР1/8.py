"""
В массиве m храним положение магараджей по столбцам (
−
1
−1 — пусто).

Функция tst проверяет, не бьют ли друг друга магараджи, сравнивая текущую с уже поставленными.

Функция f перебирает все варианты расстановки, учитывая, что должно быть ровно 
K
K магараджей.

В конце выводим количество корректных расстановок.
"""


# Максимальный размер доски N <= 10
N, K = map(int, input().split())
m = [-1] * 10  # m[i] - строка, на которой стоит магараджа в столбце i, -1 если нет
sum_ans = 0

def tst(i, t, p):
    """
    Проверяет, можно ли поставить магараджу в столбце i на строку t,
    не попадая под бой с уже поставленными магараджами (p - индекс проверяемого столбца).
    """
    if t < 0 or p == i:
        return True
    if m[p] < 0:
        return tst(i, t, p + 1)
    x = i - p
    y = t - m[p]
    x2 = x * x
    y2 = y * y
    # Проверка: не стоят ли на одной вертикали, горизонтали, диагонали (ферзь)
    # и не бьют ли друг друга как конь (x^2 + y^2 == 5)
    if y == 0 or x == 0 or x2 == y2 or x2 + y2 == 5:
        return False
    return tst(i, t, p + 1)

def f(i, j):
    """
    Рекурсивно перебирает все варианты расстановки магараджей.
    i - текущий столбец, j - сколько магараджей уже поставлено.
    """
    global sum_ans
    if i == N:
        if j == K:
            sum_ans += 1
        return
    for t in range(-1, N):
        if j == K and t != -1:
            continue
        if tst(i, t, 0):
            m[i] = t
            f(i + 1, j + (t >= 0))
            m[i] = -1  # сбрасываем после перебора

f(0, 0)
print(sum_ans)
